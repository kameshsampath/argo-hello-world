# https://taskfile.dev
version: "3"

dotenv:
  - .env

tasks:
  create_work_dirs:
    cmds:
      - mkdir -p {{.KUBECONFIG_DIR}}
      - mkdir -p work
    vars:
      KUBECONFIG_DIR:
        sh: dirname $KUBECONFIG
    silent: true
  reload_env:
    cmds:
      - source .env
    silent: true
  create_cluster:
    deps:
    - create_work_dirs
    cmds:
      - k3d registry create "$REGISTRY_NAME" --port "$REGISTRY_PORT"
      - k3d cluster create $K3D_CLUSTER_NAME -c cluster.yaml
      - task: reload_env
      # Docker push
      - docker pull gcr.io/google-samples/hello-app:1.0
      - docker tag gcr.io/google-samples/hello-app:1.0 "localhost:$REGISTRY_PORT/hello-app:1.0"
      - docker push "localhost:$REGISTRY_PORT/hello-app:1.0"
      ## Sanity Checks
      - |
        kubectl create deployment hello-server \
         --image="k3d-$REGISTRY_NAME:$REGISTRY_PORT/hello-app:1.0"
      - kubectl rollout status deployment.apps/hello-server --timeout=30s
      - kubectl delete deployment.apps/hello-server
    silent: true
    ignore_error: true
  delete_cluster:
    cmds:
      - k3d cluster delete -c cluster.yaml
      - k3d registry delete "$K3D_CLUSTER_NAME-registry.localhost"
    silent: true
    ignore_error: true
  bootstrap:
    silent: true
    cmds:
      - |
        flux bootstrap github \
        --owner=$GITHUB_USER \
        --repository=argo-hello-world \
        --branch=flamingo \
        --personal \
        --path=./clusters/dev
      - until kubectl get ns argocd &>/dev/null;do sleep 5s;done;
      - kubectl rollout status -n argocd  deployment.apps/argocd-notifications-controller --timeout=180s
      - kubectl rollout status -n argocd  deployment.apps/argocd-applicationset-controller --timeout=180s
      - kubectl rollout status -n argocd  deployment.apps/argocd-server  --timeout=180s
      - kubectl rollout status -n argocd  deployment.apps/argocd-repo-server   --timeout=180s
      - kubectl rollout status -n argocd  deployment.apps/argocd-repo-server   --timeout=180s

  create_knative_app:
    silent: true
    cmds:
      - |
        yq '.spec.source.repoURL="{{.GITOPS_REPO_URL}}"'  $GITOPS_DEMO_HOME/argo/apps/infra-knative.yaml | kubectl apply -f -
    vars:
      GITOPS_REPO_URL:
        sh: gh repo view --json url -q '.url'
  
  create_hello_world_app:
    silent: true
    dir: ./work/go-hello-world
    cmds:
      - |
        yq '.spec.source.repoURL="{{.GITOPS_REPO_URL}}"'  $GITOPS_DEMO_HOME/argo/apps/hello-world.yaml
    vars:
      GITOPS_REPO_URL:
        sh: gh repo view --json url -q '.url'
  
  argocd_admin_password:
    silent: true
    aliases:
      - admin_password
    cmds:
      - kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  
  flamingo_oci_manifests:
    aliases:
      - flamingo_manifests
      - oci_manifests
    silent: false
    cmds:
      - |
        kustomize build ./apps/oci/flamingo | flux push artifact oci://"$FLAMINGO_MANIFESTS_OCI_REPO:$ARGOCD_VERSION" \
        --annotations="org.opencontainers.image.source=$(git config --get remote.origin.url)" \
        --path - \
        --source="$(git config --get remote.origin.url)" \
        --revision="flamingo@sha1:$(git rev-parse HEAD)"
