# https://taskfile.dev

version: "3"

dotenv:
  - .env

tasks:
  create_work_dirs:
    cmds:
      - mkdir -p {{.KUBECONFIG_DIR}}
      - mkdir -p work
    vars:
      KUBECONFIG_DIR:
        sh: dirname $KUBECONFIG
    silent: true
  reload_env:
    cmds:
      - source .env
    silent: true
  create_cluster:
    cmds:
      - k3d registry create "$REGISTRY_NAME" --port "$REGISTRY_PORT"
      - k3d cluster create $K3D_CLUSTER_NAME -c cluster.yaml
      - task: reload_env
      # Docker push
      - docker pull gcr.io/google-samples/hello-app:1.0
      - docker tag gcr.io/google-samples/hello-app:1.0 "localhost:$REGISTRY_PORT/hello-app:1.0"
      - docker push "localhost:$REGISTRY_PORT/hello-app:1.0"
      ## Sanity Checks
      - |
        kubectl create deployment hello-server \
         --image="k3d-$REGISTRY_NAME:$REGISTRY_PORT/hello-app:1.0"
      - kubectl rollout status deployment.apps/hello-server --timeout=30s
      - kubectl delete deployment.apps/hello-server
    silent: true
    ignore_error: true
  delete_cluster:
    cmds:
      - k3d cluster delete -c cluster.yaml
      - k3d registry delete "$K3D_CLUSTER_NAME-registry.localhost"
    silent: true
    ignore_error: true
  bootstrap:
    silent: true
    cmds:
     - cmd: kubectl create ns argocd
       ignore_error: true
     - kubectl apply -k $GITOPS_DEMO_HOME/clusters/dev/argocd
     - kubectl rollout status -n argocd deploy/argocd-server --timeout=120s
     - kubectl rollout status deployment -n argocd argocd-applicationset-controller --timeout=60s
     - kubectl rollout status deployment -n argocd argocd-notifications-controller --timeout=60s
     - kubectl rollout status deployment -n argocd argocd-dex-server --timeout=60s
     - kubectl rollout status deployment -n argocd argocd-repo-server --timeout=60s
     - printf "Argo CD Admin Password:{{.ARGOCD_ADMIN_PASSWORD}}"
  create_knative_app:
    silent: true
    cmds:
      - argocd login --insecure --username admin --password {{.ARGOCD_ADMIN_PASSWORD}} $ARGOCD_SERVER_URL
      - |
         yq '.spec.source.repoURL=strenv(GITOPS_REPO_URL)'  $GITOPS_DEMO_HOME/clusters/dev/infra-knative.yaml | kubectl apply -f -
      - argocd app sync knative
    vars:
      ARGOCD_ADMIN_PASSWORD:
        sh: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      GITOPS_REPO_URL:
        sh: gh repo view --json url -q '.url'
  create_hello_world_app:
    silent: true
    dir: ./work/go-hello-world
    cmds:
      - |
        yq '.spec.source.repoURL=strenv(GITOPS_REPO_URL)'  $GITOPS_DEMO_HOME/clusters/dev/hello-world.yaml | kubectl apply -f -
    vars:
      GITOPS_REPO_URL:
        sh: gh repo view --json url -q '.url'
  admin_password:
    silent: true
    cmds:
      - kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d